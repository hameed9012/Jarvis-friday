# Core Dependencies
livekit
livekit-agents
livekit-plugins-google
python-dotenv
requests
langchain-community
yfinance
psutil
speedtest-cli
qrcode[pil]
aiohttp

# New Advanced Features Dependencies
matplotlib
seaborn
numpy
pandas
opencv-python
face-recognition
sounddevice
soundfile
wikipedia
PyAutoGUI
schedule
cryptography
Pillow
pytz

# Additional Dependencies for Enhanced Features
plotly
scikit-learn
nltk
spacy
beautifulsoup4
selenium
pycryptodome
python-magic
textstat
wordcloud
transformers
torch
torchvision
flask
fastapi
uvicorn
streamlit

# Development and Testing
pytest
black
flake8
mypy
jupyter
ipython

# Optional Dependencies for Extended Functionality
discord.py
python-telegram-bot
slack-sdk
notion-client==0.3.0
trello-py
todoist-api-python
openai
anthropic
google-cloud-speech
azure-cognitiveservices-speech
boto3

# venv\Scripts\activate
# python .\agent.py dev
# For later pushes (after the first one):
# git push

# Optional: Check the status of your repository
# git status

# Optional: View commit history
# git log

# ========================================
# Git Push Steps: Push Local Changes to Repo
# ========================================

# 1. Open your terminal (or VS Code terminal)

# 2. Navigate to your project folder
# Example: cd path/to/your/project
# cd C:/Users/YourName/Documents/my_project

# 3. Initialize git in the folder if you havenâ€™t already
# git init

# 4. Add your GitHub remote URL (only once per repo)
# git remote add origin https://github.com/YourUsername/your-repo-name.git

# 5. Check your remote to confirm it's set
# git remote -v

# 6. Stage all your changes
# git add .

# 7. Commit your changes with a message
# git commit -m "Your commit message here"

# 8. Push your changes to the main branch (or master)
# git push origin main
# If your branch is called "master", use:
# git push origin master

# 9. If this is your first push and branch doesn't exist on GitHub:
# git push -u origin main

# 10. Done! ðŸš€ Your code is now in your GitHub repo.

# OPTIONAL TROUBLESHOOTING:
# If you're asked for login or password:
# Use your GitHub username and a personal access token instead of your password.
# To create a token: Go to GitHub > Settings > Developer Settings > Personal Access Tokens.

# ========================================
# End of Git Push Steps
# Save this file for later whenever you forget!
# ========================================
